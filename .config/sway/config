### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --insensitive --show drun | xargs swaymsg exec --
set $lock swaylock -c 323232
set $tweakcpu sudo ryzenadj --fast-limit=35000 --slow-limit=30000 --tctl-temp=90 --apu-skin-temp=65
set $keylight keylight -a 'http://192.168.1.137:9123'

### Output configuration

output * background #fbf1c7 solid_color
output * subpixel rgb

default_border pixel 1
default_floating_border normal
hide_edge_borders smart

### Idle configuration

exec swayidle -w \
	timeout 800 '$lock -f' \
	timeout 860 'pgrep swaylock && swaymsg "output * power off"' \
	resume 'swaymsg "output * power on"' \
	before-sleep '$lock -f' \
	after-resume '$tweakcpu'

### Input configuration

input type:keyboard {
	xkb_layout  us,es
	xkb_variant altgr-intl,cat
	xkb_options caps:escape,grp:alt_space_toggle
}

input type:touchpad {
	tap  enabled
	drag enabled
	dwt  enabled # disable while typing

	scroll_method  two_finger
	natural_scroll enabled
	pointer_accel  0.8
	click_method   clickfinger # 2/3 fingers is right/middle click
}

input type:pointer {
	pointer_accel 1.0
	scroll_factor 1.5
}

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
#bindsym $mod+Shift+e exit
bindsym $mod+Shift+p exec systemctl poweroff
bindsym $mod+Shift+o exec systemctl reboot
bindsym --locked $mod+Shift+s exec systemctl suspend
#bindsym $mod+Shift+l exec "$lock -f; sleep 1; pkill -USR1 swayidle"
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# All workspaces but the first two default to either external monitor.
workspace 1  output eDP-1
workspace 2  output eDP-1
workspace 3  output DP-1 DP-2 eDP-1
workspace 4  output DP-1 DP-2 eDP-1
workspace 5  output DP-1 DP-2 eDP-1
workspace 6  output DP-1 DP-2 eDP-1
workspace 7  output DP-1 DP-2 eDP-1
workspace 8  output DP-1 DP-2 eDP-1
workspace 9  output DP-1 DP-2 eDP-1
workspace 10 output DP-1 DP-2 eDP-1

# App positions.
assign [app_id="thunderbird"] workspace 3
assign [app_id="discord"] workspace 5
assign [app_id="org.telegram.desktop"] workspace 6
assign [app_id="Slack"] workspace 7
assign [app_id="firefox"] workspace 8
assign [app_id="chromium"] workspace 9
assign [app_id="nnn"] workspace 9
assign [app_id="ncmpc"] workspace 10

for_window [app_id="^menu$"] floating enable, border none
for_window [floating] border csd
for_window [title="Firefox â€” Sharing Indicator"] kill
for_window [title=".*is sharing your screen.$"] kill
for_window [title=".*is sharing a window.$"] kill

# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
# TODO: disabled because it confuses me when I press it by mistake.
#bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Multimedia

# Fn+1, Fn+2, Fn+3
# TODO: replace pactl with wpctl, see https://wiki.archlinux.org/title/WirePlumber#Keyboard_volume_control
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +2dB
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -2dB
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# Fn+4 or Fn+F4
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --locked XF86Tools exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Fn+5, Fn+6
bindsym --locked XF86MonBrightnessDown exec brightnessctl --exponent=2 set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl --exponent=2 set +5%

# Fn+7 or Fn+F7 (only useful when docked)
bindsym XF86Display exec sudo ddcutil setvcp --sleep-less --noverify 10 $(( ($(brightnessctl get)*100) / $(brightnessctl max) ))
bindsym XF86Launch5 exec sudo ddcutil setvcp --sleep-less --noverify 10 $(( ($(brightnessctl get)*100) / $(brightnessctl max) ))

# Fn+F8, Fn+F9 (only useful when docked)
bindsym XF86Launch6 exec pactl-cycle-sink
bindsym XF86Launch7 exec camera-config

bindsym --locked $mod+Alt+comma exec mpc prev
bindsym --locked $mod+Alt+period exec mpc next
bindsym --locked $mod+Alt+minus exec mpc toggle
bindsym --locked $mod+Alt+slash exec mpc toggle

# Apps

bindsym $mod+Alt+k exec $term --app-id=nnn nnn -d -u -U
bindsym $mod+Alt+n exec $term --app-id=ncmpc ncmpc
bindsym $mod+Alt+e exec $term helix Documents/TODO.txt
bindsym $mod+Alt+j exec thunderbird
bindsym $mod+Alt+i exec firefox

# Other custom binds

# bindsym $mod+g exec grim - | swappy -f -                   # all displays + swappy
bindsym $mod+Shift+g exec grim -g "$(slurp)" - | swappy -f - # slurp + swappy
bindsym $mod+Alt+g exec cd /tmp && grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') # current dislay + /tmp
bindsym $mod+Alt+m exec systemctl --user start mbsync
bindsym $mod+o exec killall -SIGUSR1 waybar
bindsym $mod+p exec wofimoji

font pango:Inconsolata 16

# Binds

bindswitch --locked lid:on output * disable
bindswitch --locked lid:off output * enable

# Status Bar:
bar {
	id top
	position top

	swaybar_command waybar
	font pango:Inconsolata 16

	colors {
		statusline #ffffff
		background #282828
		inactive_workspace #32323200 #32323200 #5c5c5c
	}
}

include /etc/sway/config.d/*

exec brightnessctl set 40%
exec sudo ddcutil setvcp --sleep-less --noverify 10 70 &
exec $tweakcpu
exec xrdb -load .Xresources

exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec systemd-notify --ready

### Daemons

# Use "exec exec" to avoid keeping a shell process around.

exec exec mako >/tmp/mako.log 2>&1
exec exec poweralertd >/tmp/poweralertd.log 2>&1
exec exec kanshi >/tmp/kanshi.log 2>&1
exec exec nm-applet --indicator

exec exec /usr/lib/geoclue-2.0/demos/agent
exec exec gammastep -v >/tmp/gammastep.log 2>&1
